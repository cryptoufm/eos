{"ast":null,"code":"var _jsxFileName = \"/Users/yiyocardona/Documents/GitHub/eos/client/src/Components/Ranking/index.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { styles } from './ranking.css';\nimport players from './players';\nimport Footer from '../Footer';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\nclass Ranking extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRows = () => {\n      fetch('/api/getRanking').then(res => res.json()).then(rows => this.setState({\n        rows\n      })).catch(err => err);\n    };\n\n    this.state = {\n      rows: []\n    };\n  }\n\n  componentWillMount() {\n    this.getRows();\n  }\n\n  renderTable(staterows) {\n    let rowsjson = JSON.parse(\"[\" + staterows + \"]\");\n    const json = rowsjson[0];\n    console.log(\"hola\", json);\n    return React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      id: \"players\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Jugadores\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"$ Mises $ \"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, json.map(row => React.createElement(TableRow, {\n      key: row.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(PersonIcon, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, row.name))), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, row.balance)))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Ranking\"), React.createElement(\"div\", {\n      id: \"tableContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.rows.length > 0 ? this.renderTable(this.state.rows) : null), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Ranking;","map":{"version":3,"sources":["/Users/yiyocardona/Documents/GitHub/eos/client/src/Components/Ranking/index.js"],"names":["React","Component","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","styles","players","Footer","Grid","PersonIcon","LocalAtmIcon","Ranking","constructor","props","getRows","fetch","then","res","json","rows","setState","catch","err","state","componentWillMount","renderTable","staterows","rowsjson","JSON","parse","console","log","map","row","name","balance","render","length"],"mappings":"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","sourcesContent":["import React, { Component }   from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { styles }  from './ranking.css';\nimport players from'./players';\nimport Footer from '../Footer';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\n\nclass Ranking extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      rows: []\n    }\n  }\n\n  componentWillMount() {\n    this.getRows();\n  }\n\n  getRows = () => {\n    fetch('/api/getRanking')\n    .then(res => res.json())\n    .then(rows => this.setState({ rows }))\n    .catch(err => err)\n  }\n\n  renderTable(staterows) {\n    let rowsjson = JSON.parse(\"[\" + staterows + \"]\");\n    const json = rowsjson[0]\n    console.log(\"hola\", json)\n    return  (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell id=\"players\">Jugadores</TableCell>\n            <TableCell>$ Mises $ </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          { json.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Grid item>\n                  <Grid item xs={0}>\n                    <PersonIcon color = 'secondary'/>\n                  </Grid>\n                  <Grid item>\n                    {row.name}\n                  </Grid>\n                </Grid>  \n              </TableCell>\n              <TableCell>{row.balance}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n\n  render() {\n\n    return(\n      <div id='wrapper'>\n        <div id=\"title\">\n          Ranking\n        </div>\n        <div id=\"tableContainer\">\n          {(this.state.rows.length > 0) ? this.renderTable(this.state.rows) : null}\n        </div>\n      <Footer />\n    </div>\n      )\n  }\n}\n\nexport default  Ranking"]},"metadata":{},"sourceType":"module"}